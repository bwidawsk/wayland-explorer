{"type":"protocol","name":"surface_augmenter","copyright":{"type":"copyright","text":"Copyright 2021 The Chromium Authors\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the \"Software\"),\n    to deal in the Software without restriction, including without limitation\n    the rights to use, copy, modify, merge, publish, distribute, sublicense,\n    and/or sell copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice (including the next\n    paragraph) shall be included in all copies or substantial portions of the\n    Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE."},"interfaces":[{"type":"interface","name":"surface_augmenter","version":"5","description":{"type":"description","text":"The global interface exposing surface delegated composition\n      capabilities is used to instantiate an interface extension for a\n      wl_surface object. This extended interface will then allow\n      delegated compostion of the surface contents, effectively\n      disconnecting the direct relationship between the buffer and the\n      surface content (adding support for solid quads and rounded corner\n      for instance).","summary":"surface composition delegation"},"requests":[{"type":"request","name":"destroy","requestType":"destructor","description":{"type":"description","text":"Informs the server that the client will not be using this\n        protocol object anymore. This does not affect any other objects,\n        augmenter objects included.","summary":"Destroy the surface augmenter."},"args":[]},{"type":"request","name":"create_solid_color_buffer","description":{"type":"description","text":"Instantiate a buffer of the given size for the purpose of a solid color\n  quad of a given color.","summary":"creates a solid color buffer"},"args":[{"type":"arg","name":"id","argType":"new_id","interface":"wl_buffer"},{"type":"arg","name":"color","argType":"array","summary":"quad color represented by a SkColor4f"},{"type":"arg","name":"width","argType":"int"},{"type":"arg","name":"height","argType":"int"}]},{"type":"request","name":"get_augmented_surface","description":{"type":"description","text":"Instantiate an interface extension for the given wl_surface to\n\textend composition of its content. If the given wl_surface already has\n\ta augmentation object associated, the delegate_exists protocol error is\n  raised.","summary":"extend surface interface for delegation"},"args":[{"type":"arg","name":"id","argType":"new_id","summary":"the new augmenter interface id","interface":"augmented_surface"},{"type":"arg","name":"surface","argType":"object","summary":"the surface","interface":"wl_surface"}]},{"type":"request","name":"get_augmented_subsurface","since":"2","description":{"type":"description","text":"Instantiate an interface extension for the given wl_subsurface to\n\textend composition of its content. If the given wl_subsurface already has\n\ta augmentation object associated, the delegate_exists protocol error is\n  raised.","summary":"extend sub surface interface for delegation"},"args":[{"type":"arg","name":"id","argType":"new_id","summary":"the new augmenter interface id","interface":"augmented_sub_surface"},{"type":"arg","name":"subsurface","argType":"object","summary":"the subsurface","interface":"wl_subsurface"}]}],"events":[],"enums":[{"type":"enum","name":"error","bitfield":false,"entries":[{"type":"entry","name":"augmented_surface_exists","value":"0","summary":"the surface already has a augmenter object\n             associated"}]}]},{"type":"interface","name":"augmented_surface","version":"3","description":{"type":"description","text":"An additional interface to a wl_surface object, which allows the\n      client to specify the delegated composition of the surface\n      contents.","summary":"delegate composition of a wl_surface"},"requests":[{"type":"request","name":"destroy","requestType":"destructor","description":{"type":"description","text":"The associated wl_surface's augmenter is removed.\n\tThe change is applied on the next wl_surface.commit.","summary":"remove delegated composition of the surface"},"args":[]},{"type":"request","name":"set_rounded_corners","description":{"type":"description","text":"[Deprecated] Informs the server that it must apply the rounded corners\n        mask filter that shall be applied on next commit. Use\n        set_rounded_corners_bounds instead.","summary":"set the surface rounded corners"},"args":[{"type":"arg","name":"top_left","argType":"fixed","summary":"top left corner"},{"type":"arg","name":"top_right","argType":"fixed","summary":"top right corner"},{"type":"arg","name":"bottom_right","argType":"fixed","summary":"bottom right corner"},{"type":"arg","name":"bottom_left","argType":"fixed","summary":"bottom left corner"}]},{"type":"request","name":"set_destination_size","since":"2","description":{"type":"description","text":"Sets the surface destination viewport size, with subpixel accuracy.\n      This state is double-buffered, and is applied on the next wl_surface.commit.","summary":"set the surface destination viewport size, with subpixel accuracy"},"args":[{"type":"arg","name":"width","argType":"fixed","summary":"width of the surface"},{"type":"arg","name":"height","argType":"fixed","summary":"height of the surface"}]},{"type":"request","name":"set_rounded_clip_bounds","since":"2","description":{"type":"description","text":"Informs the server that it must apply the rounded clipping mask filter\n        that shall be applied on next commit. The mask can be uniform for\n        several surfaces and applied uniformally so that two or more\n        surfaces visually look as a single surface with rounded corners.\n        Please note this is can only be used on surfaces that are used as\n        overlays, which must not have any subtrees. The rounding will be\n        ignored if the bounds are outside of the surface.","summary":"set the surface rounded clip bounds"},"args":[{"type":"arg","name":"x","argType":"int"},{"type":"arg","name":"y","argType":"int"},{"type":"arg","name":"width","argType":"int"},{"type":"arg","name":"height","argType":"int"},{"type":"arg","name":"top_left","argType":"fixed","summary":"top left corner"},{"type":"arg","name":"top_right","argType":"fixed","summary":"top right corner"},{"type":"arg","name":"bottom_right","argType":"fixed","summary":"bottom right corner"},{"type":"arg","name":"bottom_left","argType":"fixed","summary":"bottom left corner"}]},{"type":"request","name":"set_background_color","since":"3","description":{"type":"description","text":"Sets a background color of a this surface. This information will be\n        associated with the next buffer commit. Please note this is different\n        from solid color buffers, which creates a new buffer instance, and\n        rather provides additional information how the buffer should be\n        composited. Passing empty array means the background color is reset.\n        The default value is determined by the Wayland compositor then.","summary":"sets a background color of this surface"},"args":[{"type":"arg","name":"color","argType":"array","summary":"overlay color represented by a SkColor4f"}]}],"events":[],"enums":[{"type":"enum","name":"error","bitfield":false,"entries":[{"type":"entry","name":"bad_value","value":"0","summary":"negative values in radius or size"},{"type":"entry","name":"no_surface","value":"1","summary":"the wl_surface was destroyed"}]}]},{"type":"interface","name":"augmented_sub_surface","version":"5","description":{"type":"description","text":"An additional interface to a wl_subsurface object, which allows the\n      client to specify the delegated composition of the surface\n      contents.","summary":"delegate composition of a wl_subsurface"},"requests":[{"type":"request","name":"destroy","requestType":"destructor","description":{"type":"description","text":"The associated wl_surface's augmenter is removed.\n\tThe change is applied on the next wl_surface.commit.","summary":"remove delegated composition of the surface"},"args":[]},{"type":"request","name":"set_position","description":{"type":"description","text":"This schedules a sub-surface position change.\n\tThe sub-surface will be moved so that its origin (top left\n\tcorner pixel) will be at the location x, y of the parent surface\n\tcoordinate system. The coordinates are not restricted to the parent\n\tsurface area. Negative values are allowed.\n\n\tThe scheduled coordinates will take effect whenever the state of the\n\tparent surface is applied. When this happens depends on whether the\n\tparent surface is in synchronized mode or not. See\n\twl_subsurface.set_sync and wl_subsurface.set_desync for details.\n\n\tIf more than one set_position request is invoked by the client before\n\tthe commit of the parent surface, the position of a new request always\n\treplaces the scheduled position from any previous request.\n\n\tThe initial position is 0, 0.\n  This state is double-buffered, and is applied on the next wl_surface.commit.","summary":"sets a subsurface position with subpixel accuracy"},"args":[{"type":"arg","name":"x","argType":"fixed","summary":"x coordinate in the parent surface"},{"type":"arg","name":"y","argType":"fixed","summary":"y coordinate in the parent surface"}]},{"type":"request","name":"set_clip_rect","since":"4","description":{"type":"description","text":"This schedules a clip rect to be applied when drawing this sub-surface.\n  The clip will be placed with its origin (top left corner pixel) at the\n  location x, y of the parent surface coordinate system. The coordinates are not\n  restricted to the parent surface area. Negative x and y values are allowed.\n\n  If all of x, y, width and height are -1.0, the clip rect is unset instead.\n\n  Initially, surfaces have no clip set.\n  This state is double-buffered, and is applied on the next wl_surface.commit.","summary":"sets a subsurface clip rect with subpixel accuracy"},"args":[{"type":"arg","name":"x","argType":"fixed","summary":"x coordinate in the parent surface"},{"type":"arg","name":"y","argType":"fixed","summary":"y coordinate in the parent surface"},{"type":"arg","name":"width","argType":"fixed","summary":"width of the clip rect"},{"type":"arg","name":"height","argType":"fixed","summary":"height of the clip rect"}]},{"type":"request","name":"set_transform","since":"5","description":{"type":"description","text":"This schedules a transform to be applied when drawing this sub-surface.\n        This transform does not apply to any child surfaces of this sub-surface.\n\n        The matrix should be passed as an array of 6 floats in column major\n        order. An empty array can be sent to set the transform to the identity\n        matrix.\n\n        The initial transform is identity.\n        This state is double-buffered, and is applied on the next wl_surface.commit.","summary":"sets a subsurface transform as an affine matrix"},"args":[{"type":"arg","name":"matrix","argType":"array","summary":"size 6 affine matrix, or size 0 for identity matrix"}]}],"events":[],"enums":[{"type":"enum","name":"error","bitfield":false,"entries":[{"type":"entry","name":"invalid_size","value":"0","summary":"array sent with invalid dimensions"}]}]}]}